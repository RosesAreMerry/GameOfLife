(()=>{"use strict";var t=function(){function t(t){this.currentX=.9,this.currentY=.9,this.currentZoom=10,this.context=t}return t.prototype.draw=function(t){var n=this.context;n.clearRect(0,0,n.canvas.width,n.canvas.height),n.beginPath(),n.strokeStyle="grey",n.lineWidth=1;for(var e=n.canvas.width/this.currentZoom,r=this.currentX%1*e,o=this.currentY%1*e,c=r;c<n.canvas.width;c+=e)n.moveTo(c,0),n.lineTo(c,n.canvas.height);for(var a=o;a<n.canvas.height;a+=e)n.moveTo(0,a),n.lineTo(n.canvas.width,a);for(n.stroke(),n.beginPath(),n.lineWidth=1,n.strokeStyle="white",c=r-e;c<n.canvas.width+e;c+=e)for(a=o-e;a<n.canvas.height+e;a+=e)n.moveTo(c,a),t["".concat(Math.floor(c/e-this.currentX+.01),",").concat(Math.floor(a/e-this.currentY+.01))]&&(n.fillStyle="white",n.fillRect(c,a,e,e),n.strokeRect(c,a,e,e));n.fill(),n.stroke()},t}();const n=t;function e(t){var n={};for(var e in t){for(var c=e.split(",").map((function(t){return Number(t)})),a=0,i=r(c);a<i.length;a++){var h=i[a];t["".concat(h[0],",").concat(h[1])]||o(h,t)&&(n["".concat(h[0],",").concat(h[1])]=!0)}o(c,t,!0)&&(n["".concat(c[0],",").concat(c[1])]=!0)}return n}function r(t){for(var n=[],e=-1;e<=1;e++)for(var r=-1;r<=1;r++)0==e&&0==r||n.push([t[0]+e,t[1]+r]);return n}function o(t,n,e){void 0===e&&(e=!1);var o=r(t).map((function(t){return!!n["".concat(t[0],",").concat(t[1])]})).filter((function(t){return t})).length;return e&&2==o||3==o}var c=document.getElementById("gameWorld"),a=c.getContext("2d");a.canvas.width=window.innerWidth,a.canvas.height=window.innerHeight;var i,h=new n(a),l={};function u(){l=e(l),h.draw(l)}h.draw(l);var v=250;c.addEventListener("keydown",(function(t){" "==t.key&&(i?(clearInterval(i),i=null):i=setInterval(u,v)),"ArrowRight"==t.key&&(v*=.5,clearInterval(i),i=setInterval(u,v),console.log(v)),"ArrowLeft"==t.key&&(v*=2,clearInterval(i),i=setInterval(u,v),console.log(v)),"ArrowUp"==t.key&&(i||u())})),c.addEventListener("wheel",(function(t){var n=.01*t.deltaY;h.currentZoom+=n,h.currentZoom<10&&(h.currentZoom=10),h.currentZoom>100&&(h.currentZoom=100);var e=t.clientX,r=t.clientY,o=n*(e/c.width),a=n*(r/c.height);h.currentX+=o,h.currentY+=a,h.draw(l)})),c.addEventListener("click",(function(t){var n=t.clientX,r=t.clientY,o=a.canvas.width/h.currentZoom,c=Math.floor(n/o-h.currentX+.01),i=Math.floor(r/o-h.currentY+.01);l["".concat(c,",").concat(i)]=!0,h.draw(l),e(l)})),c.addEventListener("contextmenu",(function(t){t.preventDefault();var n=t.clientX,e=t.clientY,r=a.canvas.width/h.currentZoom,o=Math.floor(n/r-h.currentX+.01),c=Math.floor(e/r-h.currentY+.01);delete l["".concat(o,",").concat(c)],h.draw(l)})),window.addEventListener("resize",(function(){a.canvas.width=window.innerWidth,a.canvas.height=window.innerHeight,h.draw(l)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,